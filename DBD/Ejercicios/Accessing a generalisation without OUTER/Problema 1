CREATE TABLE Employee(
id INTEGER PRIMARY KEY,
age INTEGER,
name VARCHAR(20));

CREATE TABLE Clerk(
id INTEGER PRIMARY KEY REFERENCES Employee(id),
infoAccessLevel INTEGER);

CREATE TABLE Director(
id INTEGER PRIMARY KEY REFERENCES Employee(id),
office VARCHAR(5));

INSERT INTO Employee(id, age, name) VALUES (1, 32, 'Smith');
INSERT INTO Employee(id, age, name) VALUES (2, 35, 'Pan');
INSERT INTO Employee(id, age, name) VALUES (3, 40, 'Hook');
INSERT INTO Employee(id, age, name) VALUES (4, 12, 'Darling');

INSERT INTO Clerk(id, infoAccessLevel) VALUES (1, 5);
INSERT INTO Clerk(id, infoAccessLevel) VALUES (3, 4);

INSERT INTO Director(id, office) VALUES (2, 'B602');
INSERT INTO Director(id, office) VALUES (3, 'C523');

COMMIT;

===============================================================================

Obtenir tots els empleats amb tots els atributs definits a la jerarquia. Feu-ho SENSE OUTER join i ordeneu el resultat per id. Pareu atenció a no fer servir OUTER JOIN de forma inadvertida amb altres notacions com ara "A LEFT JOIN B" o l'ús de "(+)" en la condició de JOIN.

Pel joc de proves que trobareu al fitxer adjunt, la sortida seria:

1 32 Smith 5 NULL
2 35 Pan NULL B602
3 40 Hook 4 C523
4 12 Darling NULL NULL

===============================================================================


SELECT e.id, e.age, e.name, c.infoAccessLevel, d.office
FROM Employee e, Clerk c, Director d
WHERE e.id = c.id AND e.id = d.id
UNION SELECT e.id, e.age, e.name, c.infoAccessLevel, NULL 
FROM Employee e, Clerk c
WHERE e.id = c.id AND e.id NOT IN (SELECT d.id FROM Director d)
UNION SELECT e.id, e.age, e.name, NULL, d.office
FROM Employee e, Director d
WHERE e.id = d.id AND e.id NOT IN (SELECT c.id FROM Clerk c)
UNION SELECT e.id, e.age, e.name, NULL, NULL
FROM Employee e
WHERE e.id NOT IN (SELECT d.id FROM Director d) AND e.id NOT IN (SELECT c.id FROM Clerk c);
